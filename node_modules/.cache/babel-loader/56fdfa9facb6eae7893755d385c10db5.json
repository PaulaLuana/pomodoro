{"ast":null,"code":"var _jsxFileName = \"/home/paula/pomodoro2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n\n  const [timeFocus, setTimeFocus] = useState(25 * 60); //valores que ser達o modificados no cronometro\n\n  const [timeInterval, setTimeInterval] = useState(5 * 60); //valores que ser達o modificados no cronometro\n\n  function reduceTimeFocus() {\n    if (timeFocus > 0) {\n      setInitFocus(timeFocus - 1);\n    } else {\n      alert(\"O valor precisa ser maior que zero.\");\n    }\n  }\n\n  function reduceTimeInterval() {\n    if (timeInterval > 0) {\n      setInitInterval(timeInterval - 1);\n    } else {\n      alert(\"O valor precisa ser maior que zero.\");\n    }\n  }\n\n  function addTimeFocus() {\n    setIni(timeFocus + 60);\n  }\n\n  function reduceTimeInterval() {\n    setTimeInterval(timeInterval + 60);\n  }\n\n  function convertMinutes(seconds) {\n    return Math.floor(seconds / 60);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Tempo de foco \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: convertMinutes(timeFocus)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Lsxm3b88DEp56myR85qLyxVoP4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/paula/pomodoro2/src/App.js"],"names":["React","useState","useEffect","App","initFocus","setInitFocus","initInterval","setInitInterval","timeFocus","setTimeFocus","timeInterval","setTimeInterval","reduceTimeFocus","alert","reduceTimeInterval","addTimeFocus","setIni","convertMinutes","seconds","Math","floor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C,CADa,CACmC;;AAChD,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,CAAD,CAAhD,CAFa,CAEwC;;AACrD,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAG,EAAJ,CAA1C,CAHa,CAGsC;;AACnD,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAE,EAAH,CAAhD,CAJa,CAI2C;;AAExD,WAASW,eAAT,GAA0B;AACxB,QAAGJ,SAAS,GAAG,CAAf,EAAiB;AACfH,MAAAA,YAAY,CAACG,SAAS,GAAC,CAAX,CAAZ;AACD,KAFD,MAEK;AACHK,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF;;AAED,WAASC,kBAAT,GAA6B;AAC3B,QAAGJ,YAAY,GAAG,CAAlB,EAAoB;AAClBH,MAAAA,eAAe,CAACG,YAAY,GAAC,CAAd,CAAf;AACD,KAFD,MAEK;AACHG,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF;;AAED,WAASE,YAAT,GAAuB;AACrBC,IAAAA,MAAM,CAACR,SAAS,GAAC,EAAX,CAAN;AACD;;AAED,WAASM,kBAAT,GAA6B;AAC3BH,IAAAA,eAAe,CAACD,YAAY,GAAC,EAAd,CAAf;AACD;;AAED,WAASO,cAAT,CAAwBC,OAAxB,EAAgC;AAC9B,WAAOC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAC,EAAnB,CAAP;AACD;;AAED,sBACE;AAAA,8CACgB;AAAA;AAAA;AAAA;AAAA,YADhB,eAEE;AAAA,gBAAKD,cAAc,CAACT,SAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxCQL,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nfunction App() {\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n  const [timeFocus, setTimeFocus] = useState(25*60); //valores que ser達o modificados no cronometro\n  const [timeInterval, setTimeInterval] = useState(5*60); //valores que ser達o modificados no cronometro\n\n  function reduceTimeFocus(){\n    if(timeFocus > 0){\n      setInitFocus(timeFocus-1);\n    }else{\n      alert(\"O valor precisa ser maior que zero.\")\n    }\n  }\n\n  function reduceTimeInterval(){\n    if(timeInterval > 0){\n      setInitInterval(timeInterval-1);\n    }else{\n      alert(\"O valor precisa ser maior que zero.\")\n    }\n  }\n\n  function addTimeFocus(){\n    setIni(timeFocus+60);\n  }\n\n  function reduceTimeInterval(){\n    setTimeInterval(timeInterval+60);\n  }\n\n  function convertMinutes(seconds){\n    return Math.floor(seconds/60);\n  }\n\n  return(\n    <div>\n      Tempo de foco <br></br>\n      <h1>{convertMinutes(timeFocus)}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}