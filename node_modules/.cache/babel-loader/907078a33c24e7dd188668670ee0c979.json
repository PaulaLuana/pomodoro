{"ast":null,"code":"var _jsxFileName = \"/home/paula/pomodoro2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport tomate from './assets/tomate.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n\n  const [timer, setTimer] = useState(25 * 60); //valores que serão modificados no cronometro\n\n  const [status, setStatus] = useState(false);\n  const [type, setType] = useState; //funcao para reduzir tempo de foco pelo botao\n\n  function reduceTimeFocus() {\n    if (initFocus <= 1) {\n      alert(\"O valor precisa ser maior que zero.\");\n    } else {\n      setInitFocus(initFocus - 1);\n      setTimeFocus(timeFocus - 60);\n    }\n  } //funcao para reduzir tempo de intervalo pelo botao\n\n\n  function reduceTimeInterval() {\n    if (initInterval <= 1) {\n      alert(\"O valor precisa ser maior que zero.\");\n    } else {\n      setInitInterval(initInterval - 1);\n      setTimeInterval(timeInterval - 60);\n    }\n  } //funcao para adicionar tempo de foco pelo botao\n\n\n  function addTimeFocus() {\n    setInitFocus(initFocus + 1);\n    setTimeFocus(timeFocus + 60);\n  } //funcao para adicionar tempo de intervalo pelo botao\n\n\n  function addTimeInterval() {\n    setInitInterval(initInterval + 1);\n    setTimeInterval(timeInterval + 60);\n  }\n  /*Operações sobre o cronometro*/\n\n\n  function startTimeFocus() {\n    //ativa o cronometro\n    setStatusFocus(true);\n  }\n\n  function pauseTimeFocus() {\n    //pausa o cronometro\n    setStatusFocus(false);\n  }\n\n  function resetTimeFocus() {\n    //reinicia o cronometro de foco\n    setStatusFocus(false);\n    setTimeFocus(initFocus * 60);\n  }\n\n  function startTimeInterval() {\n    //ativa o cronometro\n    setStatusInterval(true);\n  }\n\n  function pauseTimeInterval() {\n    //pausa o cronometro\n    setStatusInterval(false);\n  }\n\n  function resetTimeInterval() {\n    //reinicia o cronometro de intervalo\n    setStatusInterval(false);\n    setTimeInterval(initInterval * 60);\n  }\n  /*as seções vão acontecer da seguinte maneira:\n    o cronometro de intervalo começa quando status for false e timeFocus for igual a zero.\n    cronometro de foco reativa automaticamente quando status for false e timeInterval for igual a zero.*/\n  //funcoes para auxiliar na contagem do cronometro\n\n\n  function decrementSecondsFocus() {\n    //decrementa os segundos de tempo de foco\n    setTimeFocus(timeFocus - 1);\n\n    if (timeFocus === 0) {\n      setStatusFocus(false);\n    }\n  }\n\n  function decrementSecondsInterval() {\n    //decrementa os segundos de tempo de intervalo\n    setTimeInterval(timeInterval - 1);\n\n    if (timeInterval === 0) {\n      setStatusInterval(false);\n    }\n  } //realiza as operações sobre o cronometro acompanhando os estados\n\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (statusFocus === false && timeFocus === 0) {\n        setStatusInterval(true);\n        decrementSecondsInterval();\n      } else if (statusInterval === false && timeInterval === 0) {\n        setStatusFocus(true);\n        decrementSecondsFocus();\n      } else if (statusFocus === true && timeFocus != 0) {\n        console.log(\"statusFocus === true\");\n        decrementSecondsFocus();\n      } else if (statusInterval === true && timeInterval !== 0) {\n        decrementSecondsInterval();\n      }\n    }, 1000);\n  }, [statusFocus, statusInterval, timeFocus, timeInterval]); //preparando os segundos para mostrar na tela\n  //converte segundos em minutos\n\n  function getMinutes(seconds) {\n    return Math.floor(seconds / 60);\n  } //pega a parte dos segundos\n\n\n  function getSeconds(seconds) {\n    return seconds % 60;\n  }\n\n  const minutesFocus = getMinutes(timeFocus);\n  const secondsFocus = getSeconds(timeFocus);\n  const screenMinutesFocus = minutesFocus < 10 ? `0${minutesFocus}` : minutesFocus;\n  const screenSecondsFocus = secondsFocus < 10 ? `0${secondsFocus}` : secondsFocus;\n  const minutesInterval = getMinutes(timeInterval);\n  const secondsInterval = getSeconds(timeInterval);\n  const screenMinutesInterval = minutesInterval < 10 ? `0${minutesInterval}` : minutesInterval;\n  const screenSecondsInterval = secondsInterval < 10 ? `0${secondsInterval}` : secondsInterval;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxConfig\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"title\",\n          children: \"Tempo de foco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"initTime\",\n          children: initFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-red-qa\",\n          onClick: reduceTimeFocus,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-green-qa\",\n          onClick: addTimeFocus,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxConfig\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"title\",\n          children: \"Tempo de intervalo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"initTime\",\n          children: initInterval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-red-qa\",\n          onClick: reduceTimeInterval,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-green-qa\",\n          onClick: addTimeInterval,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cronometro\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tomate,\n        className: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"menuTitle\",\n          children: \"Foco!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), screenMinutesFocus, \":\", screenSecondsFocus, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimeFocus,\n          children: \"Iniciar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pauseTimeFocus,\n          children: \"Pausar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimeFocus,\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cronometro\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tomate,\n        className: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"menuTitle\",\n          children: \"Intervalo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), screenMinutesInterval, \":\", screenSecondsInterval, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimeInterval,\n          children: \"Iniciar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pauseTimeInterval,\n          children: \"Pausar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimeInterval,\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NPzRtO97R7Zzu0csrWz9UiBMSzk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/paula/pomodoro2/src/App.js"],"names":["React","useState","useEffect","tomate","App","initFocus","setInitFocus","initInterval","setInitInterval","timer","setTimer","status","setStatus","type","setType","reduceTimeFocus","alert","setTimeFocus","timeFocus","reduceTimeInterval","setTimeInterval","timeInterval","addTimeFocus","addTimeInterval","startTimeFocus","setStatusFocus","pauseTimeFocus","resetTimeFocus","startTimeInterval","setStatusInterval","pauseTimeInterval","resetTimeInterval","decrementSecondsFocus","decrementSecondsInterval","interval","setInterval","clearInterval","statusFocus","statusInterval","console","log","getMinutes","seconds","Math","floor","getSeconds","minutesFocus","secondsFocus","screenMinutesFocus","screenSecondsFocus","minutesInterval","secondsInterval","screenMinutesInterval","screenSecondsInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"\nimport tomate from './assets/tomate.png';\nfunction App() {\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n  const [timer, setTimer] = useState(25*60); //valores que serão modificados no cronometro\n  const [status, setStatus] = useState(false);\n  const [type, setType] = useState\n\n  //funcao para reduzir tempo de foco pelo botao\n  function reduceTimeFocus(){\n    if(initFocus <= 1){\n      alert(\"O valor precisa ser maior que zero.\")\n    }\n    else{\n      setInitFocus(initFocus-1);\n      setTimeFocus(timeFocus-60);\n    }\n  }\n\n  //funcao para reduzir tempo de intervalo pelo botao\n  function reduceTimeInterval(){\n    if(initInterval <= 1){\n      alert(\"O valor precisa ser maior que zero.\")\n    }else{\n      setInitInterval(initInterval-1);\n      setTimeInterval(timeInterval-60);\n    }\n  }\n\n  //funcao para adicionar tempo de foco pelo botao\n  function addTimeFocus(){\n    setInitFocus(initFocus+1);\n    setTimeFocus(timeFocus+60);\n  }\n\n  //funcao para adicionar tempo de intervalo pelo botao\n  function addTimeInterval(){\n    setInitInterval(initInterval+1);\n    setTimeInterval(timeInterval+60);\n  }\n\n  /*Operações sobre o cronometro*/\n\n  function startTimeFocus(){ //ativa o cronometro\n    setStatusFocus(true);\n  }\n\n  function pauseTimeFocus(){ //pausa o cronometro\n    setStatusFocus(false);\n  }\n\n  function resetTimeFocus(){ //reinicia o cronometro de foco\n    setStatusFocus(false);\n    setTimeFocus(initFocus*60);\n  }\n\n  function startTimeInterval(){ //ativa o cronometro\n    setStatusInterval(true);\n  }\n\n  function pauseTimeInterval(){ //pausa o cronometro\n    setStatusInterval(false);\n  }\n\n  function resetTimeInterval(){ //reinicia o cronometro de intervalo\n    setStatusInterval(false);\n    setTimeInterval(initInterval*60);\n  }\n\n  /*as seções vão acontecer da seguinte maneira:\n    o cronometro de intervalo começa quando status for false e timeFocus for igual a zero.\n    cronometro de foco reativa automaticamente quando status for false e timeInterval for igual a zero.*/\n\n  //funcoes para auxiliar na contagem do cronometro\n\n  function decrementSecondsFocus(){ //decrementa os segundos de tempo de foco\n    setTimeFocus(timeFocus-1);\n    if(timeFocus === 0){\n      setStatusFocus(false);\n    }\n  }\n\n  function decrementSecondsInterval(){ //decrementa os segundos de tempo de intervalo\n    setTimeInterval(timeInterval-1);\n    if(timeInterval === 0){\n      setStatusInterval(false);\n    }\n  }\n\n  //realiza as operações sobre o cronometro acompanhando os estados\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if(statusFocus === false && timeFocus === 0){\n        setStatusInterval(true);\n        decrementSecondsInterval();\n      }else if(statusInterval === false && timeInterval === 0){\n        setStatusFocus(true);\n        decrementSecondsFocus();\n      }else if(statusFocus === true && timeFocus != 0){\n        console.log(\"statusFocus === true\");\n        decrementSecondsFocus();\n      }else if(statusInterval === true && timeInterval !== 0){\n        decrementSecondsInterval();\n      }\n    }, 1000);\n  }, [statusFocus, statusInterval, timeFocus, timeInterval]);\n\n\n  //preparando os segundos para mostrar na tela\n\n  //converte segundos em minutos\n  function getMinutes(seconds){\n    return Math.floor(seconds/60);\n  }\n\n  //pega a parte dos segundos\n  function getSeconds(seconds){\n    return seconds%60;\n  }\n\n  const minutesFocus = getMinutes(timeFocus);\n  const secondsFocus = getSeconds(timeFocus);\n  const screenMinutesFocus = minutesFocus < 10 ? `0${minutesFocus}` : minutesFocus;\n  const screenSecondsFocus = secondsFocus < 10 ? `0${secondsFocus}` : secondsFocus;\n\n  const minutesInterval = getMinutes(timeInterval);\n  const secondsInterval = getSeconds(timeInterval);\n  const screenMinutesInterval = minutesInterval < 10 ? `0${minutesInterval}` : minutesInterval;\n  const screenSecondsInterval = secondsInterval < 10 ? `0${secondsInterval}` : secondsInterval;\n\n  return(\n    <div>\n      <div className=\"container\">\n        <div className=\"boxConfig\">\n          <a className=\"title\">Tempo de foco</a>\n          <h1 className=\"initTime\">{initFocus}</h1>\n          <button className=\"btn-red-qa\" onClick={reduceTimeFocus}>-</button>\n          <button className=\"btn-green-qa\" onClick={addTimeFocus}>+</button>\n        </div>\n\n        <div className=\"boxConfig\">\n          <a className=\"title\">Tempo de intervalo</a>\n          <h1 className=\"initTime\">{initInterval}</h1>\n          <button className=\"btn-red-qa\" onClick={reduceTimeInterval}>-</button>\n          <button className=\"btn-green-qa\" onClick={addTimeInterval}>+</button>\n        </div>\n      </div>\n\n      <div className=\"cronometro\">\n        <img src={tomate} className=\"img\"/>\n        <div className=\"menu\">\n            <h1 className=\"menuTitle\">Foco!</h1>\n            {screenMinutesFocus}:{screenSecondsFocus}\n            <button onClick={startTimeFocus}>Iniciar</button>\n            <button onClick={pauseTimeFocus}>Pausar</button>\n            <button onClick={resetTimeFocus}>Resetar</button> \n        </div>     \n      </div>\n\n      <div className=\"cronometro\">\n        <img src={tomate} className=\"img\"/>\n        <div className=\"menu\">\n            <h1 className=\"menuTitle\">Intervalo:</h1>\n            {screenMinutesInterval}:{screenSecondsInterval}\n            <button onClick={startTimeInterval}>Iniciar</button>\n            <button onClick={pauseTimeInterval}>Pausar</button>\n            <button onClick={resetTimeInterval}>Resetar</button> \n        </div>     \n      </div>\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}