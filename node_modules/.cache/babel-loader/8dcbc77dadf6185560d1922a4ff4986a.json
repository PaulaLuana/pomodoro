{"ast":null,"code":"var _jsxFileName = \"/home/paula/pomodoro2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport tomate from './assets/tomate.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FOCUS = 0;\nconst INTERVAL = 1;\nvar interval;\n\nfunction App() {\n  _s();\n\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n\n  const [timer, setTimer] = useState(25 * 60); //valores que serão modificados no cronometro\n\n  const [status, setStatus] = useState(false);\n  const [type, setType] = useState(FOCUS); //funcao para reduzir tempo de foco pelo botao\n\n  function reduceTimeFocus() {\n    if (status) {\n      alert(\"É preciso pausar o cronômetro\");\n    } else if (initFocus <= 1) {\n      alert(\"O valor precisa ser maior que zero.\");\n    } else {\n      setInitFocus(i => i - 1);\n\n      if (!status && type == FOCUS) {\n        setTimer((initFocus - 1) * 60);\n      }\n    }\n  } //funcao para reduzir tempo de intervalo pelo botao\n\n\n  function reduceTimeInterval() {\n    if (status) {\n      alert(\"É preciso pausar o cronômetro\");\n    } else if (initInterval <= 1) {\n      alert(\"O valor precisa ser maior que zero.\");\n    } else {\n      setInitInterval(initInterval - 1);\n\n      if (!status && type == INTERVAL) {\n        setTimer((initInterval - 1) * 60);\n      }\n    }\n  } //funcao para adicionar tempo de foco pelo botao\n\n\n  function addTimeFocus() {\n    if (status) {\n      alert(\"É preciso pausar o cronômetro\");\n    } else {\n      setInitFocus(initFocus + 1);\n\n      if (type == FOCUS) {\n        setTimer((initFocus + 1) * 60);\n      }\n    }\n  } //funcao para adicionar tempo de intervalo pelo botao\n\n\n  function addTimeInterval() {\n    if (status) {\n      alert(\"É preciso pausar o cronômetro\");\n    } else {\n      setInitInterval(initInterval + 1);\n\n      if (type == INTERVAL) {\n        setTimer((initInterval + 1) * 60);\n      }\n    }\n  }\n  /*Operações sobre o cronometro*/\n\n\n  function startTimer() {\n    //ativa o cronometro\n    setStatus(true);\n  }\n\n  function pauseTimer() {\n    //pausa o cronometro\n    clearInterval(interval);\n    setStatus(false);\n  }\n\n  function resetTimer() {\n    //reinicia o cronometro\n    clearInterval(interval);\n    setStatus(false);\n\n    if (type == FOCUS) {\n      setTimer(initFocus * 60);\n    } else {\n      setTimer(initInterval * 60);\n    }\n  } //funcoes para auxiliar na contagem do cronometro\n\n\n  function decrementSeconds() {\n    //decrementa os segundos de tempo de foco\n    if (timer == 0) {\n      if (type == FOCUS) {\n        setType(INTERVAL);\n        console.log(\"initInterval:\" + initInterval);\n        setTimer(initInterval * 60);\n      } else {\n        setType(FOCUS);\n        setTimer(initFocus * 60);\n      }\n    } else {\n      setTimer(t => t - 1);\n    }\n  } //realiza as operações sobre o cronometro acompanhando os estados\n\n\n  useEffect(() => {\n    if (status) {\n      interval = setInterval(() => {\n        decrementSeconds();\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n  }, [status]); //preparando os segundos para mostrar na tela\n  //converte segundos em minutos\n\n  function getMinutes(seconds) {\n    return Math.floor(seconds / 60);\n  } //pega a parte dos segundos\n\n\n  function getSeconds(seconds) {\n    return seconds % 60;\n  }\n\n  const minutes = getMinutes(timer);\n  const seconds = getSeconds(timer);\n  const screenMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const screenSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  const screenTitle = type == FOCUS ? \"Foco!\" : \"Intervalo!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxConfig\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"title\",\n          children: \"Tempo de foco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"initTime\",\n          children: initFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-red-qa\",\n          onClick: reduceTimeFocus,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-green-qa\",\n          onClick: addTimeFocus,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxConfig\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"title\",\n          children: \"Tempo de intervalo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"initTime\",\n          children: initInterval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-red-qa\",\n          onClick: reduceTimeInterval,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-green-qa\",\n          onClick: addTimeInterval,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cronometro\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tomate,\n        className: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"menuTitle\",\n          children: screenTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), screenMinutes, \":\", screenSeconds, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTimer,\n          children: \"Iniciar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pauseTimer,\n          children: \"Pausar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimer,\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OYvTXHip9MZLyNADTmjucyk1ijw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/paula/pomodoro2/src/App.js"],"names":["React","useState","useEffect","tomate","FOCUS","INTERVAL","interval","App","initFocus","setInitFocus","initInterval","setInitInterval","timer","setTimer","status","setStatus","type","setType","reduceTimeFocus","alert","i","reduceTimeInterval","addTimeFocus","addTimeInterval","startTimer","pauseTimer","clearInterval","resetTimer","decrementSeconds","console","log","t","setInterval","getMinutes","seconds","Math","floor","getSeconds","minutes","screenMinutes","screenSeconds","screenTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"\nimport tomate from './assets/tomate.png';\n\nconst FOCUS = 0;\nconst INTERVAL = 1;\nvar interval;\n\nfunction App() {\n  const [initFocus, setInitFocus] = useState(25); //valores dos quadros\n  const [initInterval, setInitInterval] = useState(5); //valores dos quadros\n  const [timer, setTimer] = useState(25*60); //valores que serão modificados no cronometro\n  const [status, setStatus] = useState(false);\n  const [type, setType] = useState(FOCUS);\n  //funcao para reduzir tempo de foco pelo botao\n  function reduceTimeFocus(){\n    if(status){\n      alert(\"É preciso pausar o cronômetro\");\n    }else if(initFocus <= 1){\n      alert(\"O valor precisa ser maior que zero.\")\n    }else{\n      setInitFocus((i) =>i-1);\n      if(!status && type == FOCUS){\n        setTimer((initFocus-1)*60);\n      }\n    }\n  }\n\n  //funcao para reduzir tempo de intervalo pelo botao\n  function reduceTimeInterval(){\n    if(status){\n      alert(\"É preciso pausar o cronômetro\");\n    }else if(initInterval <= 1){\n      alert(\"O valor precisa ser maior que zero.\");\n    }else{\n      setInitInterval(initInterval-1);\n      if(!status && type == INTERVAL){\n        setTimer((initInterval-1)*60);\n      }\n    }\n  }\n\n  //funcao para adicionar tempo de foco pelo botao\n  function addTimeFocus(){\n    if(status){\n      alert(\"É preciso pausar o cronômetro\");\n    }else{\n      setInitFocus(initFocus+1);\n      if(type == FOCUS){\n        setTimer((initFocus+1)*60);\n      }\n    }\n  }\n\n  //funcao para adicionar tempo de intervalo pelo botao\n  function addTimeInterval(){\n    if(status){\n      alert(\"É preciso pausar o cronômetro\");\n    }else{\n      setInitInterval(initInterval+1);\n      if(type == INTERVAL){\n        setTimer((initInterval+1)*60);\n      }\n    }\n  }\n\n  /*Operações sobre o cronometro*/\n\n  function startTimer(){ //ativa o cronometro\n    setStatus(true);\n  }\n\n  function pauseTimer(){ //pausa o cronometro\n    clearInterval(interval);\n    setStatus(false);\n  }\n\n  function resetTimer(){ //reinicia o cronometro\n    clearInterval(interval);\n    setStatus(false);\n    if(type == FOCUS){\n      setTimer(initFocus*60);\n    }else{\n      setTimer(initInterval*60);\n    }\n  }\n\n  //funcoes para auxiliar na contagem do cronometro\n\n  function decrementSeconds(){ //decrementa os segundos de tempo de foco\n    if(timer == 0){\n      if(type == FOCUS){\n        setType(INTERVAL);\n        console.log(\"initInterval:\" + initInterval);\n        setTimer(initInterval*60);\n      }else{\n        setType(FOCUS);\n        setTimer(initFocus*60);\n      }\n    }else{\n      setTimer((t) => t-1);\n    }\n  }\n\n  //realiza as operações sobre o cronometro acompanhando os estados\n  useEffect(() => {\n    if(status){\n      interval = setInterval(() => {\n        decrementSeconds();\n      }, 1000);\n    }else{\n      clearInterval(interval);\n    }\n  }, [status]);\n\n\n  //preparando os segundos para mostrar na tela\n\n  //converte segundos em minutos\n  function getMinutes(seconds){\n    return Math.floor(seconds/60);\n  }\n\n  //pega a parte dos segundos\n  function getSeconds(seconds){\n    return seconds%60;\n  }\n\n  const minutes = getMinutes(timer);\n  const seconds = getSeconds(timer);\n  const screenMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const screenSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  const screenTitle = type == FOCUS ? \"Foco!\" : \"Intervalo!\";\n\n\n  return(\n    <div>\n      <div className=\"container\">\n        <div className=\"boxConfig\">\n          <a className=\"title\">Tempo de foco</a>\n          <h1 className=\"initTime\">{initFocus}</h1>\n          <button className=\"btn-red-qa\" onClick={reduceTimeFocus}>-</button>\n          <button className=\"btn-green-qa\" onClick={addTimeFocus}>+</button>\n        </div>\n\n        <div className=\"boxConfig\">\n          <a className=\"title\">Tempo de intervalo</a>\n          <h1 className=\"initTime\">{initInterval}</h1>\n          <button className=\"btn-red-qa\" onClick={reduceTimeInterval}>-</button>\n          <button className=\"btn-green-qa\" onClick={addTimeInterval}>+</button>\n        </div>\n      </div>\n\n      <div className=\"cronometro\">\n        <img src={tomate} className=\"img\"/>\n        <div className=\"menu\">\n          <h1 className=\"menuTitle\">{screenTitle}</h1>\n          {screenMinutes}:{screenSeconds}\n          <button onClick={startTimer}>Iniciar</button>\n          <button onClick={pauseTimer}>Pausar</button>\n          <button onClick={resetTimer}>Resetar</button> \n        </div>     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}